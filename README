In this assignment we are supposed to add a layer of security to our webserver application. The webserver is to run on an lxc container. The lxc container runs on the Raspberry Pi. The container should fetch random numbers from another container. In the following text webserver container is C1 and the RNG container is C2. C1 should be available to the outside of the Pi.

We mostly followed the instructions as presented in the "LEO1 2018 Portfolio Two" presentation on the google drive.
This README outlines what we did

First we followd the guide on https://help.ubuntu.com/lts/serverguide/lxc.html in order to create unprivileged lxc containers. This makes you able to create containers without root access. 

Then we followed the guide on https://angristan.xyz/setup-network-bridge-lxc-net/. This guide outlines how to give the containers an IP on their own subnet. From this guide two important setups were performed.
First it details how to get static IPs by creating /etc/lxc/dhcp.conf. In this configuration file you can specify the IPs that the container gets upon startup.

Secondly the angristan guide shows how to forward requests from the Pi to C1. This is done by using the command.
iptables -t nat -A PREROUTING -i <host_nic> -p tcp --dport <host_port> -j DNAT --to-destination <ct_ip>:<ct_port>
And using:
-host_nic = usb0
-host_port = 80
-ct_ip = 10.0.3.11 (The ip of C1)
-ct_port = 80

On C1 we install the lighttpd webserver, which was also used in portfolio 1. The webserver can be accessed on port 80 of C1. The webserver has its root at /var/www. In this folder we the place the php-file from slide 5 in "LEO1 2018 Portfolio Two". The php-script requests on port 8080 of C2, and outputs the result.

On C2 the RNG script is created as:
#!/bin/bash
dd if=/dev/urandom bs=4 count=16 status=none | od -A none -t u4

The script has changed "random" to urandom, due to a tip from a classmate.

We start the script on port 8080 with the following command:
socat -v -v tcp-listen:8080,fork,reuseaddr exec:/bin/rng.sh

Now we can access the webserver on C1 by typing the ip in a browser on our PC.


*Notes:
-Sometimes the IPs are not correctly assigned upon startup. It seems when this is the case, then the forwarding is done correctly. 

Commands that needs to be run with current setup:

#start the lxc-containers:
lxc-start -n C1
lxc-start -n C2 

#start the RNG-service on port 8080 of C2:
lxc-attach -n C2 -- socat -v -v tcp-listen:8080,fork,reuseaddr exec:/bin/rng.sh 

#Forward requests on port 80 of the pi to port 80 of C1:
sudo iptables -t nat -A PREROUTING -i usb0 -p tcp --dport 80 -j DNAT --to-destination 10.0.3.11:80 --verbose


Useful commands:

#Check the output from C2:80:
socat - tcp:10.0.3.12:8080
curl 10.0.3.12:8080

sudo iptables -t nat -L --verbose #Shows status of nat rules
sudo iptables -t nat -F #Flushes nat rules



